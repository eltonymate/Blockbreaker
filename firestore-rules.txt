// Règles de sécurité Firestore pour Block Breaker
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Fonction pour vérifier si l'utilisateur est authentifié
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Fonction pour vérifier si l'utilisateur est le propriétaire du document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Fonction pour vérifier si les données sont valides pour un utilisateur
    function isValidUserData(data) {
      return data.keys().hasAll(['nickname', 'email', 'bestScore', 'scores', 'uid']) 
         && data.nickname is string
         && data.email is string
         && data.uid is string
         && data.uid == request.auth.uid
         && data.bestScore is number
         && data.scores is list;
    }
    
    // Fonction pour vérifier si un score est valide
    function isValidScore(score) {
      return score is number && score >= 0;
    }
    
    // Règles pour la collection 'users'
    match /users/{userId} {
      // Tout le monde peut lire les données utilisateur (pour le classement)
      allow read;
      
      // Seul l'utilisateur authentifié peut créer son propre document
      allow create: if isAuthenticated() 
                    && isOwner(userId) 
                    && isValidUserData(request.resource.data);
      
      // Seul l'utilisateur authentifié peut mettre à jour son propre document
      allow update: if isAuthenticated() 
                    && isOwner(userId)
                    && isValidUserData(request.resource.data)
                    && (request.resource.data.bestScore >= resource.data.bestScore || 
                        request.resource.data.bestScore == resource.data.bestScore);
      
      // Seul l'utilisateur authentifié peut supprimer son propre document
      allow delete: if isAuthenticated() && isOwner(userId);
    }
    
    // Règles pour d'éventuelles collections futures, comme 'leaderboards'
    match /leaderboards/{document=**} {
      // Tout le monde peut lire les classements
      allow read;
      
      // Seuls les administrateurs peuvent modifier les classements
      // (Nécessiterait une logique d'administration plus avancée)
      allow write: if false;
    }
  }
}
