/**
 * firebase-domain-check.js - Utilitaire pour v√©rifier la configuration des domaines Firebase
 */

// Import des fonctions Firebase
import { auth } from './firebase-config.js';

/**
 * V√©rifie la configuration Firebase pour l'authentification locale
 */
async function checkFirebaseSetup() {
    const results = document.getElementById('results');
    const addLogEntry = (message, type = 'info') => {
        const logItem = document.createElement('div');
        logItem.className = `log ${type}`;
        logItem.textContent = message;
        results.appendChild(logItem);
    };

    try {
        // V√©rifier si l'objet auth est correctement initialis√©
        if (!auth) {
            addLogEntry('‚ùå Erreur: L\'objet auth Firebase n\'est pas initialis√©', 'error');
            return;
        }

        addLogEntry('‚úÖ Firebase Auth est correctement initialis√©');
        
        // V√©rifier le domaine actuel
        const currentDomain = window.location.hostname;
        addLogEntry(`üìå Domaine actuel: ${currentDomain}`);
        
        // V√©rifier si nous sommes sur localhost
        if (currentDomain === 'localhost' || currentDomain === '127.0.0.1') {
            addLogEntry('üìå Vous utilisez un domaine local. Assurez-vous que ce domaine est ajout√© √† la liste des domaines autoris√©s dans la console Firebase.');
        }
        
        // V√©rifier les param√®tres de configuration Firebase
        const authDomain = auth.config?.authDomain || 'Non disponible';
        addLogEntry(`üìå Domaine d'authentification Firebase configur√©: ${authDomain}`);

        // Test de fonctionnalit√© simple (v√©rification de l'√©tat d'authentification)
        addLogEntry('üîç Test des fonctionnalit√©s d\'authentification...');
        
        const getCurrentUser = () => {
            return new Promise((resolve) => {
                const unsubscribe = auth.onAuthStateChanged(user => {
                    unsubscribe();
                    resolve(user);
                });
            });
        };

        const currentUser = await getCurrentUser();
        
        if (currentUser) {
            addLogEntry(`‚úÖ Utilisateur actuellement connect√©: ${currentUser.email}`, 'success');
        } else {
            addLogEntry('‚ÑπÔ∏è Aucun utilisateur connect√© actuellement');
        }

        addLogEntry('‚úÖ Test termin√© avec succ√®s', 'success');
    } catch (error) {
        addLogEntry(`‚ùå Erreur lors du test: ${error.message} (code: ${error.code})`, 'error');
        
        // V√©rifications sp√©cifiques pour les erreurs courantes
        if (error.code === 'auth/configuration-not-found') {
            addLogEntry(`‚ö†Ô∏è L'erreur "auth/configuration-not-found" indique que le domaine actuel n'est pas autoris√© dans Firebase.`, 'error');
            addLogEntry(`üìù Solution: Ajoutez "${window.location.hostname}" √† la liste des domaines autoris√©s dans la console Firebase.`, 'info');
        }
    }
}

// Exporter les fonctions pour utilisation dans la page HTML
window.checkFirebaseSetup = checkFirebaseSetup;
